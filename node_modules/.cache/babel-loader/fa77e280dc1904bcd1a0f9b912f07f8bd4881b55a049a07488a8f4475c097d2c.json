{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Public/5minutegames/src/utils/DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { games } from '../games';\nimport { firebase } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const today = new Date().toISOString().split(\"T\")[0];\n  firebase.init(today);\n  const [userData, setUserData] = useState(null);\n  const [gameIdPlayEditing, setGameIdPlayEditing] = useState(null);\n\n  // Check user authentication state on load\n  useEffect(() => {\n    return firebase.checkAutoLogin(setUserData);\n  }, []);\n  const signInWithGoogle = async onComplete => {\n    try {\n      await firebase.signInWithGoogle();\n      onComplete();\n    } catch (error) {\n      console.error(\"Error signing in with Google:\", error);\n    }\n  };\n  const signOutUser = async () => {\n    try {\n      await firebase.signOutUser();\n      setUserData(null);\n    } catch (error) {\n      console.error(\"Error signing out:\", error);\n    }\n  };\n  const signUpWithEmail = async (email, password, username, character, color, onComplete) => {\n    try {\n      const newUserData = await firebase.signUpWithEmail(email, password, username, character, color);\n      setUserData(newUserData);\n      onComplete();\n    } catch (error) {\n      console.error(\"Error signing up:\", error.message);\n    }\n  };\n  const signInWithEmail = async (email, password, onComplete) => {\n    try {\n      const newUserData = await firebase.signInWithEmail(email, password);\n      setUserData(newUserData);\n      onComplete();\n    } catch (error) {\n      console.error(\"Error signing in:\", error.message);\n    }\n  };\n  const setPreferences = async newPreferences => {\n    try {\n      await firebase.setPreferences(newPreferences);\n      const newUserData = {\n        ...userData,\n        preferences: newPreferences\n      };\n      setUserData(newUserData);\n    } catch (error) {\n      console.error(\"Error updating preferences:\", error);\n    }\n  };\n  const setFavorites = async newFavorites => {\n    try {\n      await firebase.setFavorites(newFavorites);\n      const newUserData = {\n        ...userData,\n        favorites: newFavorites\n      };\n      setUserData(newUserData);\n    } catch (error) {\n      console.error(\"Error updating favorites:\", error);\n    }\n  };\n  function addFavorite(id) {\n    const newFavorites = [...userData.favorites];\n    newFavorites.push(id);\n    setFavorites(newFavorites);\n  }\n  function removeFavorite(id) {\n    const newFavorites = userData.favorites.filter(item => item != id);\n    setFavorites(newFavorites);\n  }\n  const setFriends = async newFriendIds => {\n    try {\n      await firebase.setFriends(newFriendIds);\n      const newUserData = await firebase.loadData();\n      console.log(newUserData);\n      setUserData(newUserData);\n    } catch (error) {\n      console.error(\"Error updating friends:\", error);\n    }\n  };\n  async function addFriend(username) {\n    const newFriendIds = userData.friends.map(f => f.id);\n    const newFriend = await firebase.findUserByUsername(username);\n    console.log(\"new friend:\" + newFriend);\n    if (newFriend) {\n      newFriendIds.push(newFriend.id);\n      setFriends(newFriendIds);\n    }\n  }\n  async function removeFriend(id) {\n    console.log(\"remove:\" + id, userData.friends);\n    const newFriends = userData.friends.filter(item => item != id);\n    const newFriendIds = newFriends.map(f => f.id);\n    setFriends(newFriendIds);\n  }\n  function setGameToEditPlay(id) {\n    setGameIdPlayEditing(id);\n  }\n  async function updatePlay(score, message) {\n    console.log(\"update play:\" + score + \" --- \" + message);\n    try {\n      await firebase.updatePlay(gameIdPlayEditing, score, message);\n      const newTodayPlays = {\n        ...userData.todayPlays\n      };\n      newTodayPlays[gameIdPlayEditing] = {\n        score,\n        message\n      };\n      console.log(newTodayPlays);\n      const newUserData = {\n        ...userData,\n        todayPlays: newTodayPlays\n      };\n      setUserData(newUserData);\n    } catch (error) {\n      console.error(\"Error updating preferences:\", error);\n    }\n    setGameIdPlayEditing(null);\n  }\n  async function cancelEditPlay() {\n    setGameIdPlayEditing(null);\n  }\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      signInWithGoogle,\n      signOutUser,\n      signUpWithEmail,\n      signInWithEmail,\n      games,\n      userData,\n      setPreferences,\n      addFavorite,\n      removeFavorite,\n      addFriend,\n      removeFriend,\n      setGameToEditPlay,\n      gameIdPlayEditing,\n      updatePlay,\n      cancelEditPlay\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(DataProvider, \"99pfOzDrDU7f+cHXjUAz8sYxMhk=\");\n_c = DataProvider;\nexport const useData = () => {\n  _s2();\n  return useContext(DataContext);\n};\n_s2(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","games","firebase","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","today","Date","toISOString","split","init","userData","setUserData","gameIdPlayEditing","setGameIdPlayEditing","checkAutoLogin","signInWithGoogle","onComplete","error","console","signOutUser","signUpWithEmail","email","password","username","character","color","newUserData","message","signInWithEmail","setPreferences","newPreferences","preferences","setFavorites","newFavorites","favorites","addFavorite","id","push","removeFavorite","filter","item","setFriends","newFriendIds","loadData","log","addFriend","friends","map","f","newFriend","findUserByUsername","removeFriend","newFriends","setGameToEditPlay","updatePlay","score","newTodayPlays","todayPlays","cancelEditPlay","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useData","_s2","$RefreshReg$"],"sources":["/Users/dave/Public/5minutegames/src/utils/DataContext.js"],"sourcesContent":["\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { games } from '../games';\nimport { firebase } from './firebase';\n\n\nconst DataContext = createContext();\n\nexport const DataProvider = ({ children }) => {\n\n    const today = new Date().toISOString().split(\"T\")[0];\n    firebase.init(today);\n\n    const [userData, setUserData] = useState(null);\n    const [gameIdPlayEditing, setGameIdPlayEditing] = useState(null);\n  \n    // Check user authentication state on load\n    useEffect(() => {\n        return firebase.checkAutoLogin(setUserData);\n    }, []);\n\n    const signInWithGoogle = async (onComplete) => {\n        try {\n            await firebase.signInWithGoogle();\n            onComplete();\n        }\n        catch  (error) {\n            console.error(\"Error signing in with Google:\", error);\n        }\n    };\n      \n    const signOutUser = async () => {\n        try {\n            await firebase.signOutUser();\n            setUserData(null);\n        } catch (error) {\n            console.error(\"Error signing out:\", error);\n        }\n    };\n      \n    const signUpWithEmail = async (email, password, username, character, color, onComplete) => {\n        try {\n            const newUserData = await firebase.signUpWithEmail(email, password, username, character, color);\n            setUserData(newUserData);\n            onComplete();\n        } catch (error) {\n          console.error(\"Error signing up:\", error.message);\n        }\n    };\n      \n    const signInWithEmail = async (email, password, onComplete) => {\n        try {\n            const newUserData = await firebase.signInWithEmail(email, password);\n            setUserData(newUserData);\n            onComplete();\n        } catch (error) {\n            console.error(\"Error signing in:\", error.message);\n        }\n    };\n      \n    const setPreferences = async (newPreferences) => {\n        try {\n            await firebase.setPreferences(newPreferences);\n            const newUserData = { ...userData, preferences: newPreferences };\n            setUserData(newUserData);\n        } catch (error) {\n            console.error(\"Error updating preferences:\", error);\n        }\n    }\n\n    const setFavorites = async (newFavorites) => {\n        try {\n            await firebase.setFavorites(newFavorites);\n            const newUserData = { ...userData, favorites: newFavorites };\n            setUserData(newUserData);\n        } catch (error) {\n            console.error(\"Error updating favorites:\", error);\n        }\n    }\n\n    function addFavorite(id) {\n        const newFavorites = [...userData.favorites];\n        newFavorites.push(id);\n        setFavorites(newFavorites);\n    }\n\n    function removeFavorite(id) {\n        const newFavorites = userData.favorites.filter(item => item != id);\n        setFavorites(newFavorites);\n    }\n\n    const setFriends = async (newFriendIds) => {\n        try {\n            await firebase.setFriends(newFriendIds);\n            const newUserData = await firebase.loadData();\n            console.log(newUserData);\n            setUserData(newUserData);\n        } catch (error) {\n            console.error(\"Error updating friends:\", error);\n        }\n    }\n\n    async function addFriend(username) {\n        const newFriendIds = userData.friends.map( f=> f.id );\n        const newFriend = await firebase.findUserByUsername(username);\n        console.log(\"new friend:\"+newFriend);\n        if (newFriend){\n            newFriendIds.push(newFriend.id);\n            setFriends(newFriendIds);\n        }\n    }\n\n    async function removeFriend(id) {\n        console.log(\"remove:\"+id, userData.friends);\n        const newFriends = userData.friends.filter(item => item != id);\n        const newFriendIds = newFriends.map( f=> f.id );\n        setFriends(newFriendIds);\n    }\n\n    function setGameToEditPlay(id) {\n        setGameIdPlayEditing(id);\n    }\n\n    async function updatePlay(score, message) {\n        console.log(\"update play:\"+score+\" --- \"+message);\n\n        try {\n            await firebase.updatePlay(gameIdPlayEditing, score, message);\n            \n            const newTodayPlays = {...userData.todayPlays};\n            newTodayPlays[gameIdPlayEditing] = {score, message};\n            console.log(newTodayPlays);\n            const newUserData = { ...userData, todayPlays: newTodayPlays };\n            setUserData(newUserData);\n        } catch (error) {\n            console.error(\"Error updating preferences:\", error);\n        }\n\n        setGameIdPlayEditing(null);\n    }\n\n    async function cancelEditPlay() {\n        setGameIdPlayEditing(null);\n    }\n  \n    return (\n        <DataContext.Provider value={{ \n            signInWithGoogle, \n            signOutUser, \n            signUpWithEmail, \n            signInWithEmail,\n            games,\n            userData,\n            setPreferences,\n            addFavorite,\n            removeFavorite,\n            addFriend,\n            removeFriend,\n            setGameToEditPlay,\n            gameIdPlayEditing,\n            updatePlay,\n            cancelEditPlay\n        }}>\n            {children}\n        </DataContext.Provider>\n    );\n  };\n\n  export const useData = () => useContext(DataContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}