{"ast":null,"code":"import { apiClient } from './apiClient';\nexport const userService = {\n  async addFriend(username) {\n    const response = await apiClient.post('/friends', {\n      username\n    });\n    return response.data;\n  },\n  async removeFriend(friendId) {\n    const response = await apiClient.delete(`/friends/${friendId}`);\n    return response.data;\n  },\n  async addFavorite(gameId) {\n    const response = await apiClient.post(`/favorites/${gameId}`);\n    return response.data;\n  },\n  async removeFavorite(gameId) {\n    const response = await apiClient.delete(`/favorites/${gameId}`);\n    return response.data;\n  },\n  async updatePlay(gameId, score, message) {\n    const response = await apiClient.put(`/plays/${gameId}`, {\n      Score: (score === null || score === void 0 ? void 0 : score.toString()) || '',\n      Message: message || ''\n    });\n    return response.data;\n  },\n  async searchUser(username) {\n    const response = await apiClient.get(`/users/search/${encodeURIComponent(username)}`);\n    return response.success ? response.data : null;\n  }\n};","map":{"version":3,"names":["apiClient","userService","addFriend","username","response","post","data","removeFriend","friendId","delete","addFavorite","gameId","removeFavorite","updatePlay","score","message","put","Score","toString","Message","searchUser","get","encodeURIComponent","success"],"sources":["/Users/dave/Public/5minutegames/client/src/services/userService.js"],"sourcesContent":["import { apiClient } from './apiClient';\n\nexport const userService = {\n    async addFriend(username) {\n        const response = await apiClient.post('/friends', { username });\n        return response.data;\n    },\n\n    async removeFriend(friendId) {\n        const response = await apiClient.delete(`/friends/${friendId}`);\n        return response.data;\n    },\n\n    async addFavorite(gameId) {\n        const response = await apiClient.post(`/favorites/${gameId}`);\n        return response.data;\n    },\n\n    async removeFavorite(gameId) {\n        const response = await apiClient.delete(`/favorites/${gameId}`);\n        return response.data;\n    },\n\n    async updatePlay(gameId, score, message) {\n        const response = await apiClient.put(`/plays/${gameId}`, {\n            Score: score?.toString() || '',\n            Message: message || ''\n        });\n        return response.data;\n    },\n\n    async searchUser(username) {\n        const response = await apiClient.get(`/users/search/${encodeURIComponent(username)}`);\n        return response.success ? response.data : null;\n    }\n};"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AAEvC,OAAO,MAAMC,WAAW,GAAG;EACvB,MAAMC,SAASA,CAACC,QAAQ,EAAE;IACtB,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,UAAU,EAAE;MAAEF;IAAS,CAAC,CAAC;IAC/D,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMC,YAAYA,CAACC,QAAQ,EAAE;IACzB,MAAMJ,QAAQ,GAAG,MAAMJ,SAAS,CAACS,MAAM,CAAC,YAAYD,QAAQ,EAAE,CAAC;IAC/D,OAAOJ,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMI,WAAWA,CAACC,MAAM,EAAE;IACtB,MAAMP,QAAQ,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,cAAcM,MAAM,EAAE,CAAC;IAC7D,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMM,cAAcA,CAACD,MAAM,EAAE;IACzB,MAAMP,QAAQ,GAAG,MAAMJ,SAAS,CAACS,MAAM,CAAC,cAAcE,MAAM,EAAE,CAAC;IAC/D,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMO,UAAUA,CAACF,MAAM,EAAEG,KAAK,EAAEC,OAAO,EAAE;IACrC,MAAMX,QAAQ,GAAG,MAAMJ,SAAS,CAACgB,GAAG,CAAC,UAAUL,MAAM,EAAE,EAAE;MACrDM,KAAK,EAAE,CAAAH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,QAAQ,CAAC,CAAC,KAAI,EAAE;MAC9BC,OAAO,EAAEJ,OAAO,IAAI;IACxB,CAAC,CAAC;IACF,OAAOX,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMc,UAAUA,CAACjB,QAAQ,EAAE;IACvB,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACqB,GAAG,CAAC,iBAAiBC,kBAAkB,CAACnB,QAAQ,CAAC,EAAE,CAAC;IACrF,OAAOC,QAAQ,CAACmB,OAAO,GAAGnB,QAAQ,CAACE,IAAI,GAAG,IAAI;EAClD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}