{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Public/5minutegames/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { userService } from '../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    authService.checkAutoLogin().then(user => {\n      setUser(user);\n    }).catch(() => setUser(null)).finally(() => setIsLoading(false));\n  }, []);\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const user = await authService.login(email, password);\n      setUser(user);\n      return user;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const register = async (email, password, username, character, color) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const user = await authService.register(email, password, username, character, color);\n      setUser(user);\n      return user;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = async () => {\n    await authService.logout();\n    setUser(null);\n  };\n\n  // User data management functions\n  const addFriend = async username => {\n    try {\n      const updatedUser = await userService.addFriend(username);\n      setUser(updatedUser);\n      return true;\n    } catch (error) {\n      console.error(\"Error adding friend:\", error);\n      return false;\n    }\n  };\n  const removeFriend = async friendId => {\n    try {\n      const updatedUser = await userService.removeFriend(friendId);\n      setUser(updatedUser);\n    } catch (error) {\n      console.error(\"Error removing friend:\", error);\n    }\n  };\n  const addFavorite = async gameId => {\n    try {\n      const updatedUser = await userService.addFavorite(gameId);\n      setUser(updatedUser);\n    } catch (error) {\n      console.error(\"Error adding favorite:\", error);\n    }\n  };\n  const removeFavorite = async gameId => {\n    try {\n      const updatedUser = await userService.removeFavorite(gameId);\n      setUser(updatedUser);\n    } catch (error) {\n      console.error(\"Error removing favorite:\", error);\n    }\n  };\n  const updatePlay = async (gameId, score, message) => {\n    try {\n      const updatedUser = await userService.updatePlay(gameId, score, message);\n      setUser(updatedUser);\n    } catch (error) {\n      console.error(\"Error updating play:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isLoading,\n      error,\n      login,\n      register,\n      logout,\n      isAuthenticated: !!user,\n      addFriend,\n      removeFriend,\n      addFavorite,\n      removeFavorite,\n      updatePlay\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"caAZa649wyY9nHJT6au393y4yCs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","authService","userService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","error","setError","checkAutoLogin","then","catch","finally","login","email","password","err","message","register","username","character","color","logout","addFriend","updatedUser","console","removeFriend","friendId","addFavorite","gameId","removeFavorite","updatePlay","score","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/dave/Public/5minutegames/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { userService } from '../services/userService';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n\n        authService.checkAutoLogin()\n            .then((user) => {\n                setUser(user);\n            })\n            .catch(() => setUser(null))\n            .finally(() => setIsLoading(false));\n            \n    }, []);\n\n    const login = async (email, password) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const user = await authService.login(email, password);                \n            setUser(user);\n            return user;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const register = async (email, password, username, character, color) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const user = await authService.register(email, password, username, character, color);\n            setUser(user);\n            return user;\n        } catch (err) {\n            setError(err.message);\n            throw err;\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const logout = async () => {\n        await authService.logout();\n        setUser(null);\n    };\n\n    // User data management functions\n    const addFriend = async (username) => {\n        try {\n            const updatedUser = await userService.addFriend(username);\n            setUser(updatedUser);\n            return true;\n        } catch (error) {\n            console.error(\"Error adding friend:\", error);\n            return false;\n        }\n    };\n\n    const removeFriend = async (friendId) => {\n        try {\n            const updatedUser = await userService.removeFriend(friendId);\n            setUser(updatedUser);\n        } catch (error) {\n            console.error(\"Error removing friend:\", error);\n        }\n    };\n\n    const addFavorite = async (gameId) => {\n        try {\n            const updatedUser = await userService.addFavorite(gameId);\n            setUser(updatedUser);\n        } catch (error) {\n            console.error(\"Error adding favorite:\", error);\n        }\n    };\n\n    const removeFavorite = async (gameId) => {\n        try {\n            const updatedUser = await userService.removeFavorite(gameId);\n            setUser(updatedUser);\n        } catch (error) {\n            console.error(\"Error removing favorite:\", error);\n        }\n    };\n\n    const updatePlay = async (gameId, score, message) => {\n        try {\n            const updatedUser = await userService.updatePlay(gameId, score, message);\n            setUser(updatedUser);\n        } catch (error) {\n            console.error(\"Error updating play:\", error);\n        }\n    };\n\n    return (\n        <AuthContext.Provider value={{\n            user,\n            isLoading,\n            error,\n            login,\n            register,\n            logout,\n            isAuthenticated: !!user,\n            addFriend,\n            removeFriend,\n            addFavorite,\n            removeFavorite,\n            updatePlay\n        }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}